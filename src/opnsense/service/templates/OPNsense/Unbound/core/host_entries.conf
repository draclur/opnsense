{% if not helpers.empty('OPNsense.unboundplus.hosts.host') %}
{# Static entries #}
{%   set local_zone = namespace(type='transparent') %}
{# XXX: option set in legacy config #}
{%   if not helpers.empty('unbound.local_zone_type') %}
{%     set local_zone.type = unbound.local_zone_type %}
{%   endif %}
local-zone: "{{ system.domain }}" {{ local_zone.type }}
local-data-ptr: "127.0.0.1 localhost"
local-data: "localhost A 127.0.0.1"
local-data: "localhost.{{ system.domain }} A 127.0.0.1"
local-data-ptr: "::1 localhost"
local-data: "localhost AAAA ::1"
local-data: "localhost.{{ system.domain }} AAAA ::1"
{# Dynamic entries #}
{%   set if_tags = [] %}
{# XXX: option set in legacy config #}
{%   if not helpers.empty('unbound.active_interface') %}
{%     set if_tags = unbound.active_interface.split(",") %}
{%   else %}
{%     for key,item in interfaces.items() %}
{%       do if_tags.append(key) if item.virtual != '1' %}
{%     endfor %}
{%   endif %}
{%   for if_tag in if_tags %}
{%     if if_tag == 'lo0' or if_tag.startswith('ovpn') %}
{%       continue %}
{%     endif %}
{%     for key, item in interfaces.items() %}
{%       if key == if_tag %}
{%         set ip = helpers.getIPAddress(item.if) %}
{%         set domain = system.domain %}
{%         if ip.ipv4 is defined %}
{%           if not helpers.empty('dhcpd.'~if_tag~'.enable') and not helpers.empty('dhcpd.'~if_tag~'.domain') %}
{%             set domain = helpers.getNodeByTag('dhcpd.'~if_tag).domain %}
{%           endif %}
local-data-ptr: "{{ ip.ipv4 }} {{ system.hostname }}.{{ domain }}"
local-data: "{{ system.hostname }}.{{ domain }} A {{ ip.ipv4 }}"
local-data: "{{ system.hostname }} A {{ ip.ipv4 }}"
{%         endif %}
{%         if ip.ipv6 is defined and not ip.llv6 %}
{%           if not helpers.empty('dhcpdv6.'~if_tag~'.enable') and not helpers.empty('dhcpdv6.'~if_tag~'.domain') %}
{%             set domain = helpers.getNodeByTag('dhcpdv6.'~if_tag).domain %}
{%           endif %}
local-data-ptr: "{{ ip.ipv6 }} {{ system.hostname }}.{{ domain }}"
local-data: "{{ system.hostname }}.{{ domain }} AAAA {{ ip.ipv6 }}"
local-data: "{{ system.hostname }} AAAA {{ ip.ipv6 }}"
{%         endif %}
{# XXX: option set in legacy config #}
{%         if helpers.empty('unbound.noreglladdr6') and ip.llv6 %}
{%           if not helpers.empty('dhcpdv6.'~if_tag~'.enable') and not helpers.empty('dhcpdv6.'~if_tag~'.domain') %}
{%             set domain = helpers.getNodeByTag('dhcpdv6.'~if_tag).domain %}
{%           endif %}
local-data: "{{ system.hostname }}.{{ domain }} AAAA {{ ip.ipv6 }}"
local-data: "{{ system.hostname }} AAAA {{ ip.ipv6 }}"
{%         endif %}
{%       endif %}
{%     endfor %}
{%   endfor %}
{# WPAD #}
{# XXX: option set in legacy config #}
{%   if not helpers.empty('unbound.enable_wpad') %}
{%     set webui_protocol = 'https' %}
{%     set webui_port = 443 %}
{%     if not helpers.empty('system.webgui.protocol') %}
{%       set webui_protocol = system.webgui.protocol %}
{%     endif %}
{%     if not helpers.empty('system.webgui.port') %}
{%       set webui_port = system.webgui.port %}
{%     endif %}
{%     set system_fqdn = system.hostname %}
{%     if not helpers.empty('system.domain') %}
{%       set system_fqdn = system.hostname ~'.'~  system.domain%}
{%     endif %}
{# default domain #}
local-data: "wpad.{{ system.domain }} IN CNAME {{ system_fqdn }}"
local-data: "wpad IN CNAME {{ system_fqdn }}"
local-data: '{{ system.domain }} IN TXT "service: wpad:{{ webui_protocol }}://{{ system_fqdn }}:{{ webui_port }}/wpad.dat"'
{# DHCP domains #}
{%     set known_domains = [system.domain] %}
{%     for key, value in dhcpd.items() %}
{%       set tmp_domain = helpers.getNodeByTag('dhcpd.'~key~'.domain') %}
{%       if tmp_domain is defined and tmp_domain != None and not tmp_domain is in(known_domains) %}
local-data: "wpad.{{ tmp_domain }} IN CNAME {{ system_fqdn }}"
local-data: '{{ tmp_domain }} IN TXT "service: wpad:{{ webui_protocol }}://{{ system_fqdn }}:{{ webui_port }}/wpad.dat"'
{%         do known_domains.append(tmp_domain) %}
{%       endif %}
{%     endfor %}
{%   endif %}
{# Manual host entries and aliases #}
{%   for host in helpers.toList('OPNsense.unboundplus.hosts.host') %}
{%     if host.enabled == '1' %}
{#       Add the host as a first "alias" #}
{%       set host_aliases = [{'domain': host.domain, 'descr': host.description, 'hostname': host.hostname}] %}
{%       set host_uuid = host['@uuid'] %}
{%       for alias in helpers.toList('OPNsense.unboundplus.aliases.alias') %}
{%         if alias.enabled == '1' and alias.host is defined and alias.host == host_uuid %}
{%           set domain = alias.domain if alias.domain is defined and alias.domain|length else host.domain %}
{#           since no description is provided for a an alias, if TXT support is enabled, use the hosts' description #}
{%           set descr = host.description %}
{%           set hostname = alias.hostname if alias.hostname is defined and alias.hostname|length else host.hostname %}
{%           set tmp_alias = {'domain': domain, 'descr': descr, 'hostname': hostname} %}
{%           do host_aliases.append(tmp_alias) %}
{%         endif %}
{%       endfor %}
{%       for alias in host_aliases %}
{%         if alias.hostname is defined and alias.hostname|length %}
{%           do alias.update({'hostname': alias.hostname~'.'})  %}
{%         endif %}
{#         backwards compatibility for records created before introducing RR types is provided during migration #}
{%         if host.rr == 'A' or host.rr == 'AAAA' %}
{%           if alias.hostname == '*.' %}
local-zone: "{{ alias.domain }}" redirect
local-data: "{{ alias.domain }} IN {{ host.rr }} {{ host.server }}"
{%           else %}
local-data-ptr: "{{ host.server }} {{ alias.hostname }}{{ alias.domain }}"
local-data: "{{ alias.hostname }}{{ alias.domain }} IN {{ host.rr }} {{ host.server }}"
{%           endif %}
{%         elif host.rr == 'MX' %}
local-data: "{{ alias.hostname }}{{ alias.domain }} IN MX {{ host.mxprio }} {{ host.mx }}"
{%         endif %}
{# XXX: option set in legacy config  #}
{%         if alias.descr is defined and alias.descr|length and not helpers.empty('unbound.txtsupport') %}
local-data: '{{ alias.hostname }}{{ alias.domain }} TXT "{{ alias.descr }}"'
{%         endif %}
{%       endfor %}
{%     endif %}
{%   endfor %}
{% endif %}
