{%- if not helpers.empty('OPNsense.Kea.dhcp4.general.interfaces') and not helpers.empty('OPNsense.Kea.dhcp4.general.enabled') -%}
{%- set reservation_fields = ({
    'hw-address': 'hw_address',
    'ip-address': 'ip_address',
    'hostname': 'hostname'
}) -%}
{%- set option_data_defaults = ({
    'domain_name': system.domain
}) -%}
{%- set general =  OPNsense.Kea.dhcp4.general -%}
{%- set options = helpers.toList('OPNsense.Kea.dhcp4.options.option') -%}
{
    "Dhcp4": {
        "valid-lifetime": {{general.valid_lifetime}},
        "interfaces-config": {
            "interfaces": ["{{helpers.physical_interfaces(general.interfaces.split(','))|join('","')}}"]
        },
        "lease-database": {
            "type": "memfile",
            "persist": true
        },
        "control-socket": {
            "socket-type": "unix",
            "socket-name": "/var/run/kea4-ctrl-socket"
        },
        "loggers": [
            {
                "name": "kea-dhcp4",
                "output_options": [
                    {
                        "output": "syslog"
                    }
                ],
                "severity": "INFO"
            }
        ],
        "option-def": [
{% for option in options if option.space == 'vendor_encapsulated_options_space' %}
            {
                "name": {{option.name.replace('_','-')|tojson}},
                "code": {{option.code|int|tojson}},
                "space": {{option.name.replace('_','-')|tojson}},
                "type": {{option.type.replace('_','-')|tojson}},
                "array": {{((option.array|int) == 1)|tojson}}
                {%- if option.type == 'record' -%}
                ,
                "record-types": {{option.record_types|default('')|tojson}}
                {% endif +%}
            }{% if not loop.last %},{% endif +%}
{% endfor %}
        ],
{% for option in options %}
{% if loop.first %}
        "client-classes": [
{%- endif +%}
            {
              "name": {{option.name|tojson}},
              {%- if option.test +%}
              "test": {{option.test|tojson}},
              {%- else +%}
              "test": "0 == 0",
              {%- endif +%}
              "only-if-required": true,
              {% if option.space == 'vendor_encapsulated_options_space' %}
              "option-def": [
                  {
                      "name": "vendor-encapsulated-options",
                      "code": 43,
                      "type": "empty",
                      "encapsulate": {{option.name.replace('_','-')|tojson}}
                  }
              ],
              {% endif %}
              "option-data": [
                  {% if option.space == 'vendor_encapsulated_options_space' %}
                  {
                      "name": {{option.name.replace('_','-')|tojson}},
                      "space": {{option.name.replace('_','-')|tojson}},
                      "code": {{option.code|int|tojson}},
                      "data": {{option.data|tojson}}
                  },
                  {
                      "name": "vendor-encapsulated-options",
                      "always-send": true
                  }
                  {%- else -%}
                  {
                      "name": {{option.name.replace('_','-')|tojson}},
                      "space": {{option.space.replace('_','-')|tojson}},
                      "code": {{option.code|int|tojson}},
                      "data": {{option.data|tojson}}
                  }
                  {%- endif +%}
              ]
            }{% if not loop.last %},{% endif +%}
{% if loop.last %}
        ],
{% endif %}
{% endfor %}
        "subnet4": [
{%- for subnet in helpers.toList('OPNsense.Kea.dhcp4.subnets.subnet4') %}
{% set additional_options = (subnet.additional_options|default('')).split(',') +%}
            {
                "id": {{loop.index}},
                "subnet": "{{subnet.subnet}}",
                "require-client-classes": [
                    {%- for option in options if option['@uuid'] in additional_options +%}
                    {{option.name|tojson}}{% if not loop.last %},{% endif %}
                    {%- endfor +%}
                ],
                "option-data": [
{% for od_attr in (subnet.option_data|list + option_data_defaults|list)|unique if subnet.option_data[od_attr]|length > 1 or od_attr in option_data_defaults %}
                    {
                        "name": {{od_attr.replace('_','-')|tojson}},
                        "data": {{subnet.option_data[od_attr]|default(option_data_defaults[od_attr])|tojson}}
                    }{% if not loop.last %},{% endif +%}
{%- endfor +%}
                ],
                "pools": [
{% for pool in (subnet.pools|default('')).split("\n") if pool|length > 1%}
                    { "pool": "{{pool}}" }{% if not loop.last %},{% endif +%}
{% endfor %}
                ],
                "reservations": [
{% for reservation in helpers.toList('OPNsense.Kea.dhcp4.reservations.reservation') if reservation.subnet == subnet['@uuid'] %}
                    {
{%     for res_key, res_prop in reservation_fields.items() if reservation[res_prop]|length > 1 %}
                        "{{res_key}}": {{reservation[res_prop]|tojson}}{% if not loop.last %},{% endif +%}
{%     endfor %}
                    }{% if not loop.last %},{% endif +%}
{% endfor %}
                ]
            }{% if not loop.last %},{% endif +%}
{% endfor %}
        ]
{%- if not helpers.empty('OPNsense.Kea.ctrl_agent.general.enabled') -%}
        ,
        "hooks-libraries": [
            {
                "library": "/usr/local/lib/kea/hooks/libdhcp_lease_cmds.so",
                "parameters": { }
            },
{% if not helpers.empty('OPNsense.Kea.dhcp4.ha.enabled') %}
            {
                "library": "/usr/local/lib/kea/hooks/libdhcp_ha.so",
                "parameters": {
                    "high-availability": [ {
                        "this-server-name": {{OPNsense.Kea.dhcp4.ha.this_server_name|default(system.hostname)|tojson}},
                        "mode": "hot-standby",
                        "heartbeat-delay": 10000,
                        "max-response-delay": 60000,
                        "max-ack-delay": 5000,
                        "max-unacked-clients": 5,
                        "sync-timeout": 60000,
                        "peers": [
{% for peer in helpers.toList('OPNsense.Kea.dhcp4.ha_peers.peer') %}
                            {
                                "name": {{peer.name|tojson}},
                                "role": {{peer.role|tojson}},
                                "url": {{peer.url|default('')|tojson}}
                            }{% if not loop.last %},{% endif +%}
{% endfor %}
                        ]
                    } ]
                }
            }
{% endif %}
        ]
{% endif %}
    }
}
{%- endif -%}
